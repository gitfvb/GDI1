;; The first three lines of this file were inserted by DrScheme. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname test) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
;; contract: newton-method :: (num -> num) (num -> num) num num -> num
;; purpose: Die Funktion soll eine Schranke anhand der Newton-Methode ausgeben.
;;          Dabei wird der Näherungswert durch einen rekursiven Funktionswert
;;          immer verfeinert, bis eine bestimmte Schranke unterschritten ist.
;;          Newton-Methode: x_n+1 = x_n - f(x_n)/f´(x_n)
;; example: siehe Test

(define (newton-method f dfx x delta)
  (local (
          (define next-x (- x (/ (f x) (dfx x)))))
    (cond
      [(< (abs (- next-x x)) delta) next-x]
      [else (newton-method f dfx next-x delta)]
      )
    )
  )

;; Test
(check-within
 (newton-method
  (lambda (x) (* x x))
  (lambda (x) (* x 2))
  1
  0.0001
  )
 0
 0.1
 )